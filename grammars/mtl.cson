name: "Wavefront Material"
scopeName: "source.wavefront.mtl"
fileTypes: ["mtl"]
patterns: [{ include: "#main" }]


repository:
	
	# Top-level patterns
	main:
		patterns: [
			{include: "#comment"}
			{include: "#newmtl"}
			{include: "#colour"}
		]

	# Comment-lines
	comment:
		name: "comment.line.number-sign.wavefront.mtl"
		begin: "#"
		end:   "$"
		beginCaptures:
			0: name: "punctuation.definition.comment.wavefront.mtl"


	# Numeric values
	number:
		patterns: [{
			
			# Integer
			name: "constant.numeric.integer.wavefront.mtl"
			match: "(?<=[\\s,]|^)-?\\d+(?![-\\d.])"
			
		},{
			# Floating-point
			name: "constant.numeric.float.wavefront.mtl"
			match: "(?<=[\\s,]|^)-?(\\d+)(?:(\\.)(\\d+))?\\b"
			captures:
				1: name: "leading.decimal"
				2: name: "decimal.separator"
				3: name: "trailing.decimal"
		}]

	
	# newmtl: Initialise a new material
	newmtl:
		name: "meta.constructor.wavefront.mtl"
		match: "^\\s*(newmtl)(?=\\s|$)(?:\\s+(\\w+))?"
		captures:
			1: name: "keyword.function.$1.wavefront.mtl"
			2: name: "variable.parameter.material-name.wavefront.mtl"


	# Colour, transparency and illumination statements
	colour:
		patterns: [
			{include: "#ka"}
			{include: "#kd"}
			{include: "#ks"}
			{include: "#tf"}
			{include: "#illum"}
			{include: "#d"}
			{include: "#ns"}
			{include: "#sharpness"}
			{include: "#ni"}
		]
		
	
	# Ambient reflectivity
	ka:
		patterns: [{
			
			# Ka spectral [file.rfl factor]: Spectral curve
			name: "meta.ambient-reflectivity.spectral-curve.wavefront.mtl"
			match: "^\\s*(Ka)\\s+(spectral)\\s+(?!#)(\\S+)(?<!#)(?:\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "storage.modifier.$2.wavefront.mtl"
				3: name: "string.filename.wavefront.mtl"
				4: name: "entity.value.factor.wavefront.mtl", patterns: [include: "#number"]
		}, {
			
			# Ka xyz [x y z]: CIEXYZ values
			name: "meta.ambient-reflectivity.ciexyz.wavefront.mtl"
			match: "^\\s*(Ka)\\s+(xyz)\\s+([-\\d.]+)(?:\\s+([-\\d.]+)\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "storage.modifier.$2.wavefront.mtl"
				3: name: "entity.value.red.wavefront.mtl",   patterns: [include: "#number"]
				4: name: "entity.value.green.wavefront.mtl", patterns: [include: "#number"]
				5: name: "entity.value.blue.wavefront.mtl",  patterns: [include: "#number"]
		}, {
			
			# Ka [r g b]: RGB values
			name: "meta.ambient-reflectivity.rgb.wavefront.mtl"
			match: "^\\s*(Ka)\\s+([-\\d.]+)(?:\\s+([-\\d.]+)\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "entity.value.red.wavefront.mtl",   patterns: [include: "#number"]
				3: name: "entity.value.green.wavefront.mtl", patterns: [include: "#number"]
				4: name: "entity.value.blue.wavefront.mtl",  patterns: [include: "#number"]
		}]


	# Diffuse reflectivity
	kd:
		patterns: [{
			
			# Kd spectral [file.rfl factor]: Spectral curve
			name: "meta.diffuse-reflectivity.spectral-curve.wavefront.mtl"
			match: "^\\s*(Kd)\\s+(spectral)\\s+(?!#)(\\S+)(?<!#)(?:\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "storage.modifier.$2.wavefront.mtl"
				3: name: "string.filename.wavefront.mtl"
				4: name: "entity.value.factor.wavefront.mtl", patterns: [include: "#number"]
		},{
			
			# Kd xyz [x y z]: CIEXYZ values
			name: "meta.diffuse-reflectivity.ciexyz.wavefront.mtl"
			match: "^\\s*(Kd)\\s+(xyz)\\s+([-\\d.]+)(?:\\s+([-\\d.]+)\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "storage.modifier.$2.wavefront.mtl"
				3: name: "entity.value.red.wavefront.mtl",   patterns: [include: "#number"]
				4: name: "entity.value.green.wavefront.mtl", patterns: [include: "#number"]
				5: name: "entity.value.blue.wavefront.mtl",  patterns: [include: "#number"]
		},{
			
			# Kd [r g b]: RGB values
			name: "meta.diffuse-reflectivity.rgb.wavefront.mtl"
			match: "^\\s*(Kd)\\s+([-\\d.]+)(?:\\s+([-\\d.]+)\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "entity.value.red.wavefront.mtl",   patterns: [include: "#number"]
				3: name: "entity.value.green.wavefront.mtl", patterns: [include: "#number"]
				4: name: "entity.value.blue.wavefront.mtl",  patterns: [include: "#number"]
		}]


	# Specular reflectivity
	ks:
		patterns: [{
			
			# Ks spectral [file.rfl factor]: Spectral curve
			name: "meta.specular-reflectivity.spectral-curve.wavefront.mtl"
			match: "^\\s*(Ks)\\s+(spectral)\\s+(?!#)(\\S+)(?<!#)(?:\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "storage.modifier.$2.wavefront.mtl"
				3: name: "string.filename.wavefront.mtl"
				4: name: "entity.value.factor.wavefront.mtl", patterns: [include: "#number"]
		},{
			
			# Ks xyz [x y z]: CIEXYZ values
			name: "meta.specular-reflectivity.ciexyz.wavefront.mtl"
			match: "^\\s*(Ks)\\s+(xyz)\\s+([-\\d.]+)(?:\\s+([-\\d.]+)\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "storage.modifier.$2.wavefront.mtl"
				3: name: "entity.value.red.wavefront.mtl",   patterns: [include: "#number"]
				4: name: "entity.value.green.wavefront.mtl", patterns: [include: "#number"]
				5: name: "entity.value.blue.wavefront.mtl",  patterns: [include: "#number"]
		},{
			
			# Ks [r g b]: RGB values
			name: "meta.diffuse-reflectivity.rgb.wavefront.mtl"
			match: "^\\s*(Ks)\\s+([-\\d.]+)(?:\\s+([-\\d.]+)\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "entity.value.red.wavefront.mtl",   patterns: [include: "#number"]
				3: name: "entity.value.green.wavefront.mtl", patterns: [include: "#number"]
				4: name: "entity.value.blue.wavefront.mtl",  patterns: [include: "#number"]
		}]


	# Transmission filter
	tf:
		patterns: [{
			
			# Tf spectral [file.rfl factor]: Spectral curve
			name: "meta.transmission-filter.spectral-curve.wavefront.mtl"
			match: "^\\s*(Tf)\\s+(spectral)\\s+(?!#)(\\S+)(?<!#)(?:\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "storage.modifier.$2.wavefront.mtl"
				3: name: "string.filename.wavefront.mtl"
				4: name: "entity.value.factor.wavefront.mtl", patterns: [include: "#number"]
		},{

			# Tf xyz [x y z]: CIEXYZ values
			name: "meta.transmission-filter.ciexyz.wavefront.mtl"
			match: "^\\s*(Tf)\\s+(xyz)\\s+([-\\d.]+)(?:\\s+([-\\d.]+)\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "storage.modifier.$2.wavefront.mtl"
				3: name: "entity.value.red.wavefront.mtl",   patterns: [include: "#number"]
				4: name: "entity.value.green.wavefront.mtl", patterns: [include: "#number"]
				5: name: "entity.value.blue.wavefront.mtl",  patterns: [include: "#number"]
		},{
			
			# Tf [r g b]: RGB values
			name: "meta.transmission-filter.rgb.wavefront.mtl"
			match: "^\\s*(Tf)\\s+([-\\d.]+)(?:\\s+([-\\d.]+)\\s+([-\\d.]+))?"
			captures:
				1: name: "keyword.function.$1.wavefront.mtl"
				2: name: "entity.value.red.wavefront.mtl",   patterns: [include: "#number"]
				3: name: "entity.value.green.wavefront.mtl", patterns: [include: "#number"]
				4: name: "entity.value.blue.wavefront.mtl",  patterns: [include: "#number"]
		}]


	# Illumination model
	illum:
		name: "meta.illumination-model.wavefront.mtl"
		match: "^\\s*(illum)\\s+(\\d+)"
		captures:
			1: name: "keyword.function.$1.wavefront.mtl"
			2: name: "constant.numeric.integer.wavefront.mtl"


	# Dissolve
	d:
		name: "meta.dissolve.wavefront.mtl"
		match: "^\\s*(d)(?:\\s+(-halo))?\\s+([-\\d.]+)"
		captures:
			1: name: "keyword.function.$1.wavefront.mtl"
			2: name: "storage.modifier.halo.wavefront.mtl"
			3: name: "entity.value.factor.wavefront.mtl", patterns: [include: "#number"]


	# Specular exponent
	ns:
		name: "meta.specular-exponent.wavefront.mtl"
		match: "^\\s*(Ns)\\s+([-\\d.]+)"
		captures:
			1: name: "keyword.function.$1.wavefront.mtl"
			2: name: "entity.value.exponent.wavefront.mtl", patterns: [include: "#number"]
	

	# Sharpness
	sharpness:
		name: "meta.sharpness.wavefront.mtl"
		match: "^\\s*(sharpness)\\s+([-\\d.]+)"
		captures:
			1: name: "keyword.function.$1.wavefront.mtl"
			2: name: "entity.value.wavefront.mtl", patterns: [include: "#number"]
	
	
	# Optical density (Index of refraction)
	ni:
		name: "meta.optical-density.ior.wavefront.mtl"
		match: "^\\s*(Ni)\\s+([-\\d.]+)"
		captures:
			1: name: "keyword.function.$1.wavefront.mtl"
			2: name: "entity.value.wavefront.mtl", patterns: [include: "#number"]
