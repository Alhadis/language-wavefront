name: "Wavefront Object"
scopeName: "source.wavefront.obj"
fileTypes: ["obj"]
patterns: [{ include: "#main" }]


repository:
	
	# Top-level patterns
	main:
		patterns: [
			{include: "#comment"}
			{include: "#line-continuation"}
			{include: "#general"}
			{include: "#vertex"}
			{include: "#freeform"}
			{include: "#number"}
		]
	
	# Generic patterns that should be picked up anywhere
	global:
		patterns: [
			{include: "#comment"}
			{include: "#number"}
			{include: "#line-continuation"}
		]
	
	
	# Comment-lines
	comment:
		name: "comment.line.number-sign.wavefront.obj"
		begin: "#"
		end:   "$"
		beginCaptures:
			0: name: "punctuation.definition.comment.wavefront.obj"

	
	# Continuous newline
	"line-continuation":
		name: "constant.character.escape.newline.wavefront.obj"
		match: "\\\\\n"
	
	
	# Numeric values
	number:
		name: "constant.numeric.wavefront.obj"
		match: "(?<=[\\s,]|^)(-)?(\\d+)(?:(\\.)(\\d+))?\\b"
		captures:
			1: name: "keyword.operator.arithmetic.wavefront.obj"
			2: name: "leading.decimal"
			3: name: "decimal.separator"
			4: name: "trailing.decimal"
	
	
	# Mixed arguments used by General Statements
	args:
		name: "meta.arguments.wavefront.obj"
		begin: "\\G"
		end: "(?<!\\\\)$"
		patterns: [
			{include: "#global"}
			{name: "variable.language.substituted.wavefront.obj", match: "\\$[1-9]+"}
		]
		
	
	
	# XYZ[W] vector
	xyzw:
		name: "meta.vector.xyzw.wavefront.obj"
		match: "\\G\\s*(?!#)(\\S+)(?<!#)\\s+(?!#)(\\S+)(?<!#)\\s+(?!#)(\\S+)(?<!#)(?:\\s+(?!#)(\\S+)(?<!#))?"
		captures:
			1: name: "entity.x.coordinate.wavefront.obj",  patterns: [include: "#number"]
			2: name: "entity.y.coordinate.wavefront.obj",  patterns: [include: "#number"]
			3: name: "entity.z.coordinate.wavefront.obj",  patterns: [include: "#number"]
			4: name: "entity.w.weight.wavefront.obj",      patterns: [include: "#number"]
	
	# UVW vector
	uvw:
		name: "meta.vector.uvw.wavefront.obj"
		match: "\\G\\s*(?!#)(\\S+)(?<!#)\\s+(?!#)(\\S+)(?<!#)\\s+(?!#)(\\S+)(?<!#)"
		captures:
			1: name: "entity.u.coordinate.wavefront.obj",  patterns: [include: "#number"]
			2: name: "entity.v.coordinate.wavefront.obj",  patterns: [include: "#number"]
			3: name: "entity.w.coordinate.wavefront.obj",  patterns: [include: "#number"]
	
	# Normals vector
	ijk:
		name: "meta.vector.ijk.wavefront.obj"
		match: "\\G\\s*(?!#)(\\S+)(?<!#)\\s+(?!#)(\\S+)(?<!#)\\s+(?!#)(\\S+)(?<!#)"
		captures:
			1: name: "entity.i.coordinate.wavefront.obj",  patterns: [include: "#number"]
			2: name: "entity.j.coordinate.wavefront.obj",  patterns: [include: "#number"]
			3: name: "entity.k.coordinate.wavefront.obj",  patterns: [include: "#number"]
	
	
	
	# General statements
	general:
		patterns: [{
			
			# call: Inject the contents of another .obj/.mod at this line
			name: "meta.function-call.$1.wavefront.obj"
			begin: "^\\s*(call)(?:\\s+(?!#)(\\S+)?)?"
			end: "$"
			beginCaptures:
				1: name: "keyword.function.$1.wavefront.obj"
				2: name: "string.filename.wavefront.obj"
			patterns: [include: "#args"]
		},{
			
			# csh: Execute a shell command (Ignore errors)
			name: "meta.function-call.$1.ignore-errors.wavefront.obj"
			begin: "^\\s*(csh)(?:\\s+(-)(\\w*))"
			end: "$"
			beginCaptures:
				1: name: "keyword.function.$1.wavefront.obj"
				2: name: "punctuation.definition.dash.wavefront.obj"
				3: name: "string.command-name.wavefront.obj"
			patterns: [include: "#args"]
		},{
			
			# csh: Execute a shell command
			name: "meta.function-call.$1.wavefront.obj"
			begin: "^\\s*(csh)(?:\\s+(\\w+))?"
			end: "$"
			beginCaptures:
				1: name: "keyword.function.$1.wavefront.obj"
				2: name: "string.command-name.wavefront.obj"
			patterns: [include: "#args"]
		}]
	
	
	
	# Vertex data
	vertex:
		patterns: [{
			
			# v: Geometric vertex
			name: "meta.vertex.geometric.wavefront.obj"
			begin: "^\\s*(v)(?=\\s|$|#)"
			end:   "(?=$|#)"
			beginCaptures:
				1: name: "keyword.function.$1.wavefront.obj"
			patterns: [
				{include: "#xyzw"}
				{include: "#global"}
			]
		},{
			
			# vp: Parameter space vertex
			name: "meta.vertex.parameter-space.wavefront.obj"
			begin: "^\\s*(vp)(?=\\s|$)"
			end:   "$"
			beginCaptures:
				1: name: "keyword.function.$1.wavefront.obj"
			patterns: [
				{include: "#uvw"}
				{include: "#global"}
			]
		},{
			
			# vn: Vertex normal
			name: "meta.vertex.normal.wavefront.obj"
			begin: "^\\s*(vn)(?=\\s|$)"
			end:   "$"
			beginCaptures:
				1: name: "keyword.function.$1.wavefront.obj"
			patterns: [
				{include: "#ijk"}
				{include: "#global"}
			]
		},{
			
			# vt: Texture vertex
			name: "meta.vertex.texture.wavefront.obj"
			begin: "^\\s*(vt)(?=\\s|$)"
			end:   "$"
			beginCaptures:
				1: name: "keyword.function.$1.wavefront.obj"
			patterns: [
				{include: "#uvw"}
				{include: "#global"}
			]
		}]

	
	# Free-form geometry
	freeform:
		patterns: [{
			
			# cstype: Describe the type of a curve or surface
			name: "meta.free-form.attribute.type.wavefront.obj"
			match: "^\\s*(cstype)(?:\\s+(rat(?=\\s|$))?\\s*(?:(bmatrix|bezier|bspline|cardinal|taylor))?)?(?=\\s|$)"
			captures:
				1: name: "keyword.function.$1.wavefront.obj"
				2: name: "entity.rational-form.wavefront.obj"
				3: name: "entity.value.wavefront.obj"
		},{
			
			# deg: Set the polynomial degree for curves/surfaces
			name: "meta.free-form.attribute.polynomial-degree.wavefront.obj"
			match: "^\\s*(deg)(?:\\s+(\\d+)(?=\\s|$))?(?:\\s+(\\d+))?(?=\\s|$)"
			captures:
				1: name: "keyword.function.$1.wavefront.obj"
				2: name: "constant.numeric.u-degree.wavefront.obj"
				3: name: "constant.numeric.v-degree.wavefront.obj"
		},{
			
			# bmat: Set the basis matrices used for basis matrix curves/surfaces
			name: "meta.free-form.attribute.$2.basis-matrix.wavefront.obj"
			begin: "^\\s*(bmat)(?:\\s+(u|v)(?=\\s|$)\\s*)?"
			end:   "(?<!\\\\)$|(?=#)"
			contentName: "meta.matrix.wavefront.obj"
			beginCaptures:
				1: name: "keyword.function.$1.wavefront.obj"
				2: name: "entity.type.wavefront.obj"
			patterns: [include: "#global"]
		},{
			
			# step: Specify step-size for curves/surfaces that use a basis matrix
			name: "meta.free-form.attribute.step-size.wavefront.obj"
			match: "^\\s*(step)(?:\\s+(\\d+))?(?:\\s+(\\d+))?(?=\\s|$)"
			captures:
				1: name: "keyword.function.$1.wavefront.obj"
				2: name: "constant.numeric.u-size.wavefront.obj"
				3: name: "constant.numeric.v-size.wavefront.obj"
		}]
